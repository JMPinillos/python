1

00:00:00,000  -->  00:00:05,940
여기서 가질 수 있는 또 다른 질문으로 이런 것들이 있습니다.

2

00:00:05,940  -->  00:00:10,060
점을 이 선으로 축소하기로 선택한 이유는 무엇인가?

3

00:00:10,060  -->  00:00:12,915
왜 이렇게 생긴 선이 없는가?

4

00:00:12,914  -->  00:00:18,530
이를 위해서는 주성분을 선택하는 방법에 대해 조금 더 이해해야 합니다.

5

00:00:18,530  -->  00:00:22,370
데이터세트의 주성분에는 두 가지 속성이 있습니다.

6

00:00:22,370  -->  00:00:25,500
첫 번째 속성은 성분이 데이터세트에서

7

00:00:25,500  -->  00:00:29,015
가장 큰 분산을 캡처하기를 원한다는 것입니다.

8

00:00:29,015  -->  00:00:33,310
데이터세트에서 가장 큰 분산에 걸쳐 있는 성분을 선택하면

9

00:00:33,310  -->  00:00:36,560
최소한의 정보 손실이 발생합니다.

10

00:00:36,560  -->  00:00:40,915
시각적으로 각 점에서 성분까지의 거리를 보면

11

00:00:40,914  -->  00:00:45,850
손실되는 정보의 양을 이해할 수 있습니다.

12

00:00:45,850  -->  00:00:48,005
따라서 데이터세트에서

13

00:00:48,005  -->  00:00:52,700
이 두 성분을 고려한다고 가정해 보겠습니다. 데이터를 이 성분으로

14

00:00:52,700  -->  00:00:57,734
이동하는 동안 손실된 정보는 이 거리의 합으로 볼 수 있습니다.

15

00:00:57,734  -->  00:00:59,630
이들을 함께 쌓으면

16

00:00:59,630  -->  00:01:01,935
이것은 손실되는 정보의 양입니다.

17

00:01:01,935  -->  00:01:05,545
또는 이 성분을 고려해 보겠습니다.

18

00:01:05,545  -->  00:01:07,680
손실된 정보의 양은

19

00:01:07,680  -->  00:01:10,965
이 거리의 합으로 시각화할 수 있습니다.

20

00:01:10,965  -->  00:01:13,700
손실된 정보의 양을 비교하면

21

00:01:13,700  -->  00:01:17,525
이 성분이 손실된 정보가 적다는 것을 알 수 있습니다.

22

00:01:17,525  -->  00:01:20,030
성분에 대해 참이어야 하는 두 번째 사항은

23

00:01:20,030  -->  00:01:23,900
성분이 서로 직교해야 한다는 것입니다.

24

00:01:23,900  -->  00:01:25,950
이것은 정확히 무슨 의미일까요?

25

00:01:25,950  -->  00:01:28,939
이 경우 선형 대수에 대한 복습을 짧게 해야 할 수 있지만

26

00:01:28,938  -->  00:01:31,919
여기서 아이디어의 본질을 설명하겠습니다.

27

00:01:31,920  -->  00:01:36,840
직교 성분은 서로 90도 각도를 갖는 성분입니다.

28

00:01:36,840  -->  00:01:39,935
여기서 이 두 성분은 직교합니다.

29

00:01:39,935  -->  00:01:43,340
또는 여기에서와 같이

30

00:01:43,340  -->  00:01:48,365
사이에 90도 각도가 없는 두 성분은 직교하지 않습니다.

31

00:01:48,364  -->  00:01:51,649
지금까지 본 모든 예는 실제로 PCA를 수행할 때

32

00:01:51,650  -->  00:01:55,410
2차원 데이터였지만 데이터에 훨씬 더 많은

33

00:01:55,409  -->  00:02:00,344
차원이 있을 가능성이 높습니다.

34

00:02:00,344  -->  00:02:03,448
따라서 scikit-learn을 사용하여 이러한 작업을

35

00:02:03,448  -->  00:02:06,495
수행하는 기능을 갖추는 것이 우리의 다음 과제가 될 것입니다.

36

00:02:06,495  -->  00:02:07,890
이러한 작업을 수행하는 방법을

37

00:02:07,890  -->  00:02:11,729
보여 드린 다음 여러분은 직접 하실 수 있게 됩니다.
