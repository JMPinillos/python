1

00:00:00,000  -->  00:00:04,754
이것은 k-평균 알고리즘이 어떻게 작동하는지 보여주는 훌륭한 리소스입니다.

2

00:00:04,754  -->  00:00:07,960
몇 가지 예를 살펴보고 서로 다른 데이터 집합과

3

00:00:07,960  -->  00:00:12,144
서로 다른 수의 클러스터에서 어떤 일이 발생할 수 있는지 살펴보겠습니다.

4

00:00:12,144  -->  00:00:16,559
먼저 데이터 집합을 선택해 보겠습니다.

5

00:00:16,559  -->  00:00:19,504
가우스 혼합 같은 것을 선택할 수도 있습니다.

6

00:00:19,504  -->  00:00:22,399
여기에 중심을 둔다고 상상해 보세요.

7

00:00:22,399  -->  00:00:25,659
이 알고리즘이 말하는 것은 기본적으로

8

00:00:25,660  -->  00:00:29,170
모든 포인트가 처음에는 이 알고리즘에 속한다는 것입니다.

9

00:00:29,170  -->  00:00:32,695
그리고 여기에 또 다른 점과 세 번째 포인트가 있죠.

10

00:00:32,695  -->  00:00:35,000
그런 다음 알고리즘을 실행할 수 있습니다.

11

00:00:35,000  -->  00:00:36,744
"실행"하라고 하면

12

00:00:36,744  -->  00:00:39,640
가장 먼저 일어나는 일은

13

00:00:39,640  -->  00:00:43,035
각 중심이 특정 수의 포인트에 할당되는 것이죠.

14

00:00:43,034  -->  00:00:45,304
그런 다음 중심을 업데이트하면

15

00:00:45,304  -->  00:00:48,104
해당 그룹의 중심으로 이동합니다.

16

00:00:48,104  -->  00:00:51,224
포인트를 다시 할당하면

17

00:00:51,225  -->  00:00:54,520
이 경우에는 아무것도 업데이트되지 않았음을 알 수 있습니다.

18

00:00:54,520  -->  00:00:59,859
중심은 움직이지 않았고, 그 시점에서 알고리즘이 완료된 것은

19

00:00:59,859  -->  00:01:05,539
두 번 반복하는 동안 중심이 정적으로 유지되었기 때문입니다.

20

00:01:05,540  -->  00:01:12,250
이제 다시 시작해서 가우스 혼합을 다시 선택하고

21

00:01:12,250  -->  00:01:16,989
여기 아래에 두 개의 포인트가, 위에 하나의 포인트가 있다고 가정해 봅시다.

22

00:01:16,989  -->  00:01:22,399
그래서 세 개의 클러스터가 있다고 생각하고 알고리즘을 실행합니다.

23

00:01:22,400  -->  00:01:25,120
가장 먼저 발생하는 일은 모든 중심이 할당된 다음

24

00:01:25,120  -->  00:01:28,630
이를 업데이트하고

25

00:01:28,629  -->  00:01:31,329
포인트를 재할당한 후

26

00:01:31,329  -->  00:01:35,719
중심을 업데이트하면 동일한 클러스터로 끝나는 것을 다시 볼 수 있습니다.

27

00:01:35,719  -->  00:01:40,150
이를 통해 k-평균 알고리즘이 실제로 뒤에서 작동하는 방식에 대한 직관을 얻을 수 있습니다.

28

00:01:40,150  -->  00:01:45,410
즉, 중심에 가장 가까운 포인트를 찾고,

29

00:01:45,409  -->  00:01:49,989
중심을 업데이트하고, 새 위치에서 가장 가까운 포인트를 보고,

30

00:01:49,989  -->  00:01:54,119
중심을 업데이트하는 것입니다. 중심이 더 이상 움직이지 않을 때까지 계속합니다.

31

00:01:54,120  -->  00:01:58,230
하지만 잘못된 경우 어떤 일이 일어날 수 있는지 봅시다.

32

00:01:58,230  -->  00:02:01,180
가우스 혼합 모델을 다시 해봅시다.

33

00:02:01,180  -->  00:02:03,180
이렇게 보이는 두 개의 중심이 있습니다.

34

00:02:03,180  -->  00:02:10,310
완료될 때까지 클러스터링 알고리즘을 수행하고 이렇게 끝납니다.

35

00:02:10,310  -->  00:02:15,090
하지만 정확히 동일한 세트로 다시 시작합니다.

36

00:02:15,090  -->  00:02:17,365
여기에 하나를 놓고,

37

00:02:17,365  -->  00:02:22,335
여기 아래에 중심을 추가하고, 여기 위에 중심을 추가합니다.

38

00:02:22,335  -->  00:02:27,705
이제 알고리즘을 실행하면 다른 그룹화를 얻는다는 것을 알 수 있습니다.

39

00:02:27,705  -->  00:02:30,630
그룹화는 항상 동일하게 끝나고

40

00:02:30,629  -->  00:02:34,085
어떤 그룹이 가장 좋은지에 대한 경우는 아닙니다.

41

00:02:34,085  -->  00:02:37,270
이것은 우리가 다음 개념에서 탐구해 볼 것입니다.
