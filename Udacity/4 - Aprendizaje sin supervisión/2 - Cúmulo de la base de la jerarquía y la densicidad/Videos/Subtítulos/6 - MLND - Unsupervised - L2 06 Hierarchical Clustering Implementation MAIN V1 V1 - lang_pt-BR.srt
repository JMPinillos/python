1
00:00:00,333 --> 00:00:04,933
O scikit-learn facilita muito
o agrupamento hierárquico.

2
00:00:04,967 --> 00:00:08,267
Só precisamos importar
a biblioteca do agrupamento.

3
00:00:08,300 --> 00:00:12,733
O agrupamento aglomerado
é a implementação.

4
00:00:12,767 --> 00:00:15,733
Mostramos o número
de agrupamentos que queremos

5
00:00:15,767 --> 00:00:18,000
é o tipo de ligação
que procuramos.

6
00:00:18,033 --> 00:00:21,867
O Ward é o padrão,
então não precisamos mencioná-lo.

7
00:00:21,900 --> 00:00:26,433
Depois mandamos fit_predict
e o retorno são os rótulos.

8
00:00:26,467 --> 00:00:28,767
Se o conjunto de dados
tiver dez pontos,

9
00:00:28,800 --> 00:00:32,067
o fit_predict retorna um array
de dez elementos.

10
00:00:32,100 --> 00:00:35,667
Cada elemento é o rótulo
do agrupamento

11
00:00:35,700 --> 00:00:38,400
ao qual o conjunto de dados
pertence.

12
00:00:38,433 --> 00:00:42,067
Se quisermos desenhar
as árvores hierárquicas

13
00:00:42,100 --> 00:00:44,267
chamadas de dendrogramas,

14
00:00:44,300 --> 00:00:46,533
não podemos fazer isso
no scikit-learn.

15
00:00:46,567 --> 00:00:48,700
Precisamos usar o SciPy.

16
00:00:48,733 --> 00:00:52,867
Aqui carregamos o conjunto
de dados de dez pontos.

17
00:00:52,900 --> 00:00:55,533
Aqui fazemos o agrupamento,

18
00:00:55,567 --> 00:00:58,167
então o usamos o Ward
no SciPy,

19
00:00:58,200 --> 00:01:00,767
que vai retornar
uma matriz de ligação.

20
00:01:00,800 --> 00:01:04,467
Passamos a matriz de ligação
para o método de dendrograma,

21
00:01:04,500 --> 00:01:07,200
que vai criar a árvore.

22
00:01:07,233 --> 00:01:08,733
Não é incrível?

