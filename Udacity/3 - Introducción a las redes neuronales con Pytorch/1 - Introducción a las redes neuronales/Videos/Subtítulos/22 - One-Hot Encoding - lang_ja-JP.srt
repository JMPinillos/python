1
00:00:00,000 --> 00:00:01,754
これまで扱ってきたアルゴリズムは すべて数字でした

2
00:00:01,754 --> 00:00:03,674
テストの点数やグレードのように 数字を入力する必要がありました

3
00:00:03,674 --> 00:00:05,807
しかしすべての入力データが 数字になるとは限りません

4
00:00:05,807 --> 00:00:08,640
次のようなこともあります

5
00:00:08,640 --> 00:00:12,600
モジュールが贈り物を受け取ったかどうかの事実を 入力として受け取るとします

6
00:00:12,599 --> 00:00:14,184
これを数字に変換する方法は？　

7
00:00:14,185 --> 00:00:15,925
簡単です

8
00:00:15,925 --> 00:00:18,640
贈り物を受け取った場合 ただ入力変数を１とします

9
00:00:18,640 --> 00:00:21,719
贈り物を受け取らなかった場合は ただ入力変数を０とします

10
00:00:21,719 --> 00:00:24,994
では 前よりクラスが多い場合
クラスが アヒル ビーバー セイウチの場合は？

11
00:00:24,995 --> 00:00:26,144
アルゴリズムに どのような変数を入力するのでしょうか？

12
00:00:26,144 --> 00:00:29,085
0, 1, 2を入力できますが うまく機能しないでしょう

13
00:00:29,085 --> 00:00:31,350
あってはならないクラス間の 依存関係が想定されるからです

14
00:00:31,350 --> 00:00:34,515
ですから このように各クラスに１つの変数を使います

15
00:00:34,515 --> 00:00:37,649
表は このようになります

16
00:00:37,649 --> 00:00:39,530
アヒルの変数が１つ

17
00:00:39,530 --> 00:00:42,120
ビーバーの変数が１つ

18
00:00:42,119 --> 00:00:45,287
セイウチの変数が１つ

19
00:00:45,287 --> 00:00:48,954
それぞれに対応する列が 用意されています

20
00:00:48,954 --> 00:00:50,739
入力がアヒルの場合 アヒルの変数は１で

21
00:00:50,740 --> 00:00:52,274
ビーバーとセイウチの変数は ０です

22
00:00:52,274 --> 00:00:55,164
ビーバーとセイウチについても同様です

23
00:00:55,164 --> 00:00:58,109
より多くのデータの列があるかもしれませんが
少なくとも不要な依存関係はありません

24
00:00:58,109 --> 00:01:01,509
この処理は One-hot エンコーディングと呼ばれ

25
00:01:01,509 --> 00:01:06,780
データ処理の多くに使われます

