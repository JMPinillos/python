1
00:00:00,000 --> 00:00:03,575
予測は 基本的には
アルゴリズムで求められます

2
00:00:03,575 --> 00:00:06,220
離散予測の形式は
「はい」「いいえ」です

3
00:00:06,219 --> 00:00:08,256
連続予測の形式は数字で

4
00:00:08,256 --> 00:00:11,615
通常は０と１の間になります
これは確率と見なされます

5
00:00:11,615 --> 00:00:13,224
この例では

6
00:00:13,224 --> 00:00:16,664
青の学生が合格で
赤の学生が不合格です

7
00:00:16,664 --> 00:00:21,035
離散型アルゴリズムは
０を入力することで学生の不合格を

8
00:00:21,035 --> 00:00:25,679
１を入力することで学生の合格を示します

9
00:00:25,679 --> 00:00:27,274
一方で

10
00:00:27,274 --> 00:00:29,834
黒い線から点が離れるほど

11
00:00:29,835 --> 00:00:32,505
これらの確率は高くなります

12
00:00:32,505 --> 00:00:36,240
青の領域の点は
非常に高い確率になり

13
00:00:36,240 --> 00:00:40,050
この点のように 青の確率は
85%になります

14
00:00:40,049 --> 00:00:43,884
赤の領域の点は非常に低い確率になり

15
00:00:43,884 --> 00:00:48,159
下のこの点のように青である
確率は20%になります

16
00:00:48,159 --> 00:00:53,429
線上の点はすべて青である
確率が50%になります

17
00:00:53,429 --> 00:00:57,335
見ると分かりますが
確率は線からの距離の関数です

18
00:00:57,335 --> 00:01:00,390
離散予測から連続予測に移る方法は

19
00:01:00,390 --> 00:01:05,075
活性化関数を左の階段関数から

20
00:01:05,075 --> 00:01:07,655
右のシグモイド関数に変更するだけです

21
00:01:07,655 --> 00:01:10,609
シグモイド関数は大きな正の数字によって

22
00:01:10,609 --> 00:01:14,629
１に非常に近い数字を算出する
関数にすぎません

23
00:01:14,629 --> 00:01:19,219
大きな負の数字によっては０に
非常に近い数字が算出されます

24
00:01:19,219 --> 00:01:22,030
０に近い数字によっては

25
00:01:22,030 --> 00:01:25,599
点５に近い値が算出されます

26
00:01:25,599 --> 00:01:32,684
式は σ(x)=1/(1+e⁻ˣ)です

27
00:01:32,685 --> 00:01:38,245
前はモデルが正の領域と負の領域のある
線により構成されていました

28
00:01:38,245 --> 00:01:42,010
今は 確率空間全体により構成されているか
確率が求められる平面の各点で

29
00:01:42,010 --> 00:01:46,045
ラベルが青の点の場合は
１で赤の点の場合は

30
00:01:46,045 --> 00:01:47,969
０になっています

31
00:01:47,969 --> 00:01:51,370
例えば この点では 青の確率は50%で

32
00:01:51,370 --> 00:01:55,850
赤の確率は50%です

33
00:01:55,849 --> 00:02:00,509
この点では 青の確率は40%で

34
00:02:00,510 --> 00:02:02,975
赤の確率は60%です

35
00:02:02,974 --> 00:02:06,446
この点は 青の確率が30%で

36
00:02:06,447 --> 00:02:08,469
赤の確率が70%です

37
00:02:08,469 --> 00:02:11,439
ここの点は 青の確率が80%で

38
00:02:11,439 --> 00:02:14,655
赤の確率が20%です

39
00:02:14,655 --> 00:02:17,360
この確率空間を求める方法は
非常にシンプルです

40
00:02:17,360 --> 00:02:22,800
線形関数 Wx+b をシグモイド
関数と組み合わせるのです

41
00:02:22,800 --> 00:02:27,830
左には Wx+b が
０ １ ２ -１ -２といった 

42
00:02:27,830 --> 00:02:32,630
点を示す線があります

43
00:02:32,629 --> 00:02:36,930
シグモイド関数を平面の
これらの各値に適用すると

44
00:02:36,930 --> 00:02:40,515
各点で０から１の
間の数字が得られます

45
00:02:40,514 --> 00:02:44,074
これらの数字は
点が青である確率にすぎません

46
00:02:44,074 --> 00:02:46,439
点が青である確率は

47
00:02:46,439 --> 00:02:50,454
モデル ŷ=σ(Wx+b) の予測です

48
00:02:50,455 --> 00:02:53,415
予測が点５ 点６ 点７

49
00:02:53,414 --> 00:02:55,259
点４ 点３のようになる線を

50
00:02:55,259 --> 00:02:58,419
ここで確認できます

51
00:02:58,419 --> 00:03:01,539
見て分かるように
青の領域に近くなるほど

52
00:03:01,539 --> 00:03:04,905
σ(Wx+b) は１に近くなります

53
00:03:04,905 --> 00:03:07,740
赤の領域に近くなるほど

54
00:03:07,740 --> 00:03:11,115
σ(Wx+b) は０に近くなります

55
00:03:11,115 --> 00:03:13,240
メインの線にかかっていると

56
00:03:13,240 --> 00:03:15,120
Wx+b は０になります

57
00:03:15,120 --> 00:03:19,319
これは σ(Wx+b) が0.5ちょうど
であることを意味します

58
00:03:19,319 --> 00:03:21,384
ここでは 左に前に触れた
パーセプトロンがあり

59
00:03:21,384 --> 00:03:24,250
階段関数としての活性化関数があります

60
00:03:24,250 --> 00:03:26,669
右には新しいパーセプトロンがあり

61
00:03:26,669 --> 00:03:29,944
活性化関数がシグモイド関数となっています

62
00:03:29,944 --> 00:03:31,984
新しいパーセプトロンがやるのは

63
00:03:31,985 --> 00:03:33,195
入力を拾い

64
00:03:33,194 --> 00:03:38,301
エッジの重みと掛けて結果を足してから

65
00:03:38,301 --> 00:03:40,935
シグモイド関数を適用することです

66
00:03:40,935 --> 00:03:45,170
前のように１と０に戻るのではなく

67
00:03:45,169 --> 00:03:49,984
０と１の間の値を返します
0.99や0.67などです

68
00:03:49,985 --> 00:03:53,285
前は学生の合否を示していましたが

69
00:03:53,284 --> 00:03:58,000
今は学生の合格率を示しています

