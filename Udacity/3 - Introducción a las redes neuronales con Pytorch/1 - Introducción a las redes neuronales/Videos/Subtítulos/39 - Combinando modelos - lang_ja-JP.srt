1
00:00:00,000 --> 00:00:03,464
非線形モデルを 作成する方法を説明します

2
00:00:03,464 --> 00:00:06,058
非常に単純なトリックです

3
00:00:06,059 --> 00:00:12,060
次のように２つの線形モデルを組み合わせて
非線形モデルにします

4
00:00:12,060 --> 00:00:13,769
視覚的にはこのようになります

5
00:00:13,769 --> 00:00:17,518
２つのモデルが重ね合わされ
右のモデルになっています

6
00:00:17,518 --> 00:00:20,084
まるでモデルで 算術演算を行っているようです

7
00:00:20,085 --> 00:00:24,160
「この線とこの線を足すと この曲線と同じ」と言っているようです

8
00:00:24,160 --> 00:00:26,824
これを数学的に行う方法を説明します

9
00:00:26,824 --> 00:00:30,750
ご存じのように 線形モデルはすべてが確率空間のものです

10
00:00:30,750 --> 00:00:36,478
これは 各点が青い点である確率を
示すことを意味しています

11
00:00:36,478 --> 00:00:39,179
そのため例えば この点は青の領域であるため

12
00:00:39,179 --> 00:00:43,890
青である確率は 0.7です

13
00:00:43,890 --> 00:00:47,250
２番目の確率空間により得られる同じ点も

14
00:00:47,250 --> 00:00:52,170
青の領域のため 青である確率は 0.8になります

15
00:00:52,170 --> 00:00:53,353
質問が生じます

16
00:00:53,353 --> 00:00:55,890
どのように これら２つを組み合わせるかです

17
00:00:55,890 --> 00:01:00,225
２つの数字を組み合わせる最も単純な方法は 足すことです

18
00:01:00,225 --> 00:01:05,409
したがって 0.8+0.7=1.5になります

19
00:01:05,409 --> 00:01:09,890
しかし これでは１より大きいため 確率ではないように思えます

20
00:01:09,890 --> 00:01:15,915
それに確率は ０と１の間である必要があります　

21
00:01:15,915 --> 00:01:20,980
どうしたらいいでしょうか？

22
00:01:20,980 --> 00:01:24,079
１より大きい数字を ０と１の間の
数字にどう変換するのでしょうか？

23
00:01:24,078 --> 00:01:27,744
前にもこのような状況を経験していて
すべての数字を０と１の間のものに

24
00:01:27,745 --> 00:01:30,234
変換する良いツールがあります

25
00:01:30,233 --> 00:01:32,780
シグモイド関数です

26
00:01:32,780 --> 00:01:36,858
私たちがやろうとしていることです

27
00:01:36,858 --> 00:01:40,188
シグモイド関数を1.5に適用して
値0.82を得ました

28
00:01:40,188 --> 00:01:44,568
これは この点が結果の確率空間で青になる確率です

29
00:01:44,569 --> 00:01:47,299
したがって 平面の単一点に対して
確率の関数を作成できたことになります

30
00:01:47,299 --> 00:01:51,243
これが２つのモデルを
組み合わせた方法です

31
00:01:51,243 --> 00:01:54,093
一方の確率と もう一方の確率を計算し

32
00:01:54,093 --> 00:01:56,140
それらを足して シグモイド関数を適用します

33
00:01:56,140 --> 00:01:59,334
この和の重みづけをする場合はどうでしょうか？

34
00:01:59,334 --> 00:02:01,340
上のモデルを２番目のモデルの確率より
優先させる場合はどうでしょうか？

35
00:02:01,340 --> 00:02:04,370
結果は 下のモデルより上のモデルのように見えます

36
00:02:04,370 --> 00:02:07,849
重みを追加できます

37
00:02:07,849 --> 00:02:11,569
例えば 「１つ目のモデルの７倍 + 
２つ目のモデルが必要」と言うことができます

38
00:02:11,568 --> 00:02:15,698
実際 必要に応じて重みを追加できるのです

39
00:02:15,699 --> 00:02:22,355
例えば 「1つ目のモデルの7倍
+2つ目のモデルの5倍」と言うことができます

40
00:02:22,354 --> 00:02:24,240
モデルを組み合わせるときには

41
00:02:24,241 --> 00:02:29,574
最初の確率を選択し それに７を掛けてから

42
00:02:29,574 --> 00:02:34,335
２番目の確率を選択し それに５を掛けます

43
00:02:34,335 --> 00:02:36,789
必要な場合は バイアスを足すこともできます

44
00:02:36,788 --> 00:02:43,293
バイアスが-６の場合

45
00:02:43,294 --> 00:02:45,526
それを方程式全体に追加します

46
00:02:45,526 --> 00:02:48,020
７倍 +５倍 - ６なので

47
00:02:48,020 --> 00:02:52,735
2.9になります

48
00:02:52,735 --> 00:02:54,914
次にシグモイド関数を適用すると
0.95になります

49
00:02:54,913 --> 00:03:00,679
前にやったこととほとんど同じです

50
00:03:00,680 --> 00:03:02,680
以前は 入力値 x 重み +バイアスの線形
の組み合わせである線がありました

51
00:03:02,680 --> 00:03:06,085
今はこのモデルが ２つの前のモデル 
x 重み + いくつかのバイアスとなっています

52
00:03:06,085 --> 00:03:10,240
ですから ほとんど同じです

53
00:03:10,240 --> 00:03:13,300
右の曲線モデルとほとんど同じです

54
00:03:13,300 --> 00:03:17,650
前の２つの線形モデルの線形の組み合わせで

55
00:03:17,650 --> 00:03:18,905
２つのモデル間の線として
考えることもできます

56
00:03:18,905 --> 00:03:21,599
偶然ではありません

57
00:03:21,599 --> 00:03:25,818
これが ニューラルネットワーク構築方法の核心なのです

58
00:03:25,818 --> 00:03:30,573
もちろん これを行い続けることで

59
00:03:30,574 --> 00:03:32,069
既存の線形の組み合わせから
新しい複雑なモデルを得ることも想像できるでしょう

60
00:03:32,068 --> 00:03:35,435
これがニューラルネットワークの
構築に必要なことなのです

