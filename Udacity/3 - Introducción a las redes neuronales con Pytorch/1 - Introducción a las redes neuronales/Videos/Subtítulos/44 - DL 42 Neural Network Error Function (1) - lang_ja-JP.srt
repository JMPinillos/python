1
00:00:00,000 --> 00:00:02,520
ここでの目標は ニューラルネットワーク
のトレーニングです

2
00:00:02,520 --> 00:00:03,715
そのためには

3
00:00:03,715 --> 00:00:05,950
誤差関数を定義する必要があります

4
00:00:05,950 --> 00:00:10,375
まず誤差関数がパーセプトロンにとって
意味することを再度確認しましょう

5
00:00:10,375 --> 00:00:12,135
ここにパーセプトロンがあります

6
00:00:12,135 --> 00:00:15,000
左側に入力X１～Xnと

7
00:00:15,000 --> 00:00:18,900
バイアスユニットの１がある
入力ベクトルがあります

8
00:00:18,900 --> 00:00:23,945
重みW１～Wnとバイアスユニットのbのある

9
00:00:23,945 --> 00:00:26,360
エッジがあります

10
00:00:26,360 --> 00:00:30,275
そして パーセプトロンがシグモイド関数を
使用しているのが確認できますね

11
00:00:30,275 --> 00:00:37,008
予測は ŷ=σ (Wx+b) と定義されます

12
00:00:37,008 --> 00:00:39,750
確認したように この関数は各点が

13
00:00:39,750 --> 00:00:44,175
どの程度不適切に分類されているかを
示すエラーの尺度となっています

14
00:00:44,175 --> 00:00:48,565
点が正しく分類されている場合
これは非常に小さな数字になり

15
00:00:48,565 --> 00:00:50,640
線と点の距離と

16
00:00:50,640 --> 00:00:53,415
点が不適切に分類されている度合い
の尺度となります

17
00:00:53,415 --> 00:00:57,840
多層パーセプトロンで誤差関数を定義する
には何をしたらいいのでしょうか？

18
00:00:57,840 --> 00:01:00,000
すでに確認したように 予測は

19
00:01:00,000 --> 00:01:03,740
行列乗算とシグモイド関数の
組み合わせにすぎません

20
00:01:03,740 --> 00:01:07,370
誤差関数は全く同じことでは
ないのでしょうか？

21
00:01:07,370 --> 00:01:08,817
全く同じ式にすることができますが

22
00:01:08,817 --> 00:01:12,000
ŷは少しだけ複雑です

23
00:01:12,000 --> 00:01:17,490
それでもこの関数は

24
00:01:17,490 --> 00:01:20,000
点の分類がどの程度不適切か
度合いを伝えてくれます

