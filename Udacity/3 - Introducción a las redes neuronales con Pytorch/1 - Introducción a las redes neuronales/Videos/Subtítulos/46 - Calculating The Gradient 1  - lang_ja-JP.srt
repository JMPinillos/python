1
00:00:00,000 --> 00:00:02,653
では ここで前と同じようにしましょう

2
00:00:02,653 --> 00:00:06,279
ニューラルネットワークの
ウェイトに色を付けて

3
00:00:06,280 --> 00:00:07,679
点の分類をより明確なものにします

4
00:00:07,679 --> 00:00:10,349
ただし 今回は正式な方法をとります

5
00:00:10,349 --> 00:00:13,785
さあ 数学を始めましょう

6
00:00:13,785 --> 00:00:18,879
左側の単一のパーセプトロンには
入力ベクトルがあり

7
00:00:18,879 --> 00:00:22,004
ウェイト バイアス そして
ノード内にシグモイド関数が含まれます

8
00:00:22,004 --> 00:00:27,050
そして右側には 予測のための式である

9
00:00:27,050 --> 00:00:30,820
入力値の線形関数の
シグモイド関数があります

10
00:00:30,820 --> 00:00:34,520
下にあるエラーの式は

11
00:00:34,520 --> 00:00:38,799
青の点を表す青の項と

12
00:00:38,798 --> 00:00:41,185
赤の点を表す赤の項の全ての点の平均です

13
00:00:41,185 --> 00:00:43,269
そしてErrorestの山から下るために

14
00:00:43,268 --> 00:00:48,608
勾配を計算します

15
00:00:48,609 --> 00:00:55,630
勾配は単純に w1からwnまでのウェイトと
バイアスbに関するエラー関数の

16
00:00:55,630 --> 00:00:58,420
すべての偏導関数によって形成される
ベクトルです

17
00:00:58,420 --> 00:01:01,399
これらのエッジに相当していますが

18
00:01:01,399 --> 00:01:05,405
多層パーセプトロンでは
どうすればよいでしょう？

19
00:01:05,405 --> 00:01:07,233
この場合 少々複雑にはなりますが
やることはあまり変わりません

20
00:01:07,233 --> 00:01:13,503
予測があります

21
00:01:13,504 --> 00:01:16,055
そしてこれは行列の乗算とシグモイドの
関数の組み合わせに過ぎません

22
00:01:16,055 --> 00:01:19,234
エラー関数は

23
00:01:19,233 --> 00:01:21,649
ŷが少々複雑である以外は
ほとんど同じです

24
00:01:21,650 --> 00:01:23,799
勾配はほとんど同じものですが

25
00:01:23,799 --> 00:01:25,909
こちらの方がずっと長いです

26
00:01:25,909 --> 00:01:29,984
これは巨大なベクトルで

27
00:01:29,983 --> 00:01:32,583
各エントリーは各ウェイトに関する
エラーの偏導関数です

28
00:01:32,584 --> 00:01:34,489
そしてこれらは すべてのエッジに相当します

29
00:01:34,489 --> 00:01:39,500
これをより正式に書きたい場合は

30
00:01:39,500 --> 00:01:42,000
予測がシグモイドと行列乗算の組み合わせ
ということを思い出してください

31
00:01:42,000 --> 00:01:45,765
これらは行列です

32
00:01:45,765 --> 00:01:47,579
そして勾配はこれら全偏導関数によって
形成されるものに過ぎません

33
00:01:47,578 --> 00:01:49,199
行列のように見えますが 実際は
単なる長いベクトルです

34
00:01:49,200 --> 00:01:51,730
勾配降下は次のようになります

35
00:01:51,730 --> 00:01:53,430
各ウェイトW'ᵢⱼ⁽ᵏ⁾を取り

36
00:01:53,430 --> 00:01:59,206
小さな数 学習率と同じウェイトに関する
Eの偏導関数との積を

37
00:01:59,206 --> 00:02:06,125
足すことによってこれをアップデートします

38
00:02:06,125 --> 00:02:07,819
これが勾配降下ステップで

39
00:02:07,819 --> 00:02:14,270
これにより
新たにアップデートされたウェイト

40
00:02:14,270 --> 00:02:16,919
W'ᵢⱼ⁽ᵏ⁾が得られます

41
00:02:16,919 --> 00:02:20,270
このステップにより 点をより良く分類する

