1
00:00:00,000 --> 00:00:03,870
局所的最小値の問題の
別の解決策を紹介します

2
00:00:03,870 --> 00:00:07,230
局所的最小値になっても

3
00:00:07,230 --> 00:00:10,618
低い最小値を探せるように

4
00:00:10,618 --> 00:00:16,559
勢いと意志を持って
少し早歩きをするイメージです

5
00:00:16,559 --> 00:00:20,310
通常の最急降下法を
見てみましょう

6
00:00:20,309 --> 00:00:23,729
ここに来ますが いいですね

7
00:00:23,730 --> 00:00:29,065
この山を越えたいですが 勾配が
０か小さすぎるので

8
00:00:29,065 --> 00:00:31,454
うまく進めません

9
00:00:31,454 --> 00:00:33,270
前回はどうでしょう？

10
00:00:33,270 --> 00:00:37,109
その前の歩幅の平均値を
見てみましょう

11
00:00:37,109 --> 00:00:39,270
平均値が出ると

12
00:00:39,270 --> 00:00:43,435
方向が決まり 山に近づきます

13
00:00:43,435 --> 00:00:46,530
10歩の前の歩きは
最後の一歩と関連性が低いため

14
00:00:46,530 --> 00:00:50,484
平均値は少し
急すぎると思います

15
00:00:50,484 --> 00:00:52,170
では 例えば

16
00:00:52,170 --> 00:00:54,394
３歩から４歩の平均値は
どうでしょう

17
00:00:54,393 --> 00:00:57,509
それぞれの歩みに重みをつけ

18
00:00:57,509 --> 00:01:02,420
徐々に重要性を減らしていく
方法を取ります

19
00:01:02,420 --> 00:01:05,849
ここで モーメンタムを導入します

20
00:01:05,849 --> 00:01:10,260
モーメンタムとは
０から１の間のベータ値で

21
00:01:10,260 --> 00:01:16,230
前の１歩には１
前の１歩にはベータ値

22
00:01:16,230 --> 00:01:20,140
前の１歩にはベータ値の２乗

23
00:01:20,140 --> 00:01:22,849
前の１歩にはベータ値の３乗など

24
00:01:22,849 --> 00:01:25,950
１歩ずつに付加されます

25
00:01:25,950 --> 00:01:28,530
このように 以前の１歩は

26
00:01:28,530 --> 00:01:32,079
最近の歩みより
重要性が低くなります

27
00:01:32,078 --> 00:01:34,393
これで山を越えられます

28
00:01:34,394 --> 00:01:37,454
今度は 局所的最小値に達しても

29
00:01:37,453 --> 00:01:41,723
多少は押し流されても
それほどではありません

30
00:01:41,724 --> 00:01:43,847
漠然としていますが
モーメンタムを利用するアルゴリズムは 

31
00:01:43,846 --> 00:01:46,669
実際にはとても
うまく機能するようです

