1
00:00:00,000 --> 00:00:02,705
過剰適合を防ぐ別の方法を
見てみましょう

2
00:00:02,705 --> 00:00:04,448
これが あなたです

3
00:00:04,448 --> 00:00:07,589
ある日 スポーツの練習をする
ことにしました

4
00:00:07,589 --> 00:00:09,823
月曜日はテニス

5
00:00:09,823 --> 00:00:11,759
火曜日は重量挙げ

6
00:00:11,759 --> 00:00:14,070
水曜日はアメフト

7
00:00:14,070 --> 00:00:16,245
木曜日は野球

8
00:00:16,245 --> 00:00:18,344
金曜日はバスケットボール

9
00:00:18,344 --> 00:00:20,644
土曜日は卓球です

10
00:00:20,643 --> 00:00:22,648
１週間経つと

11
00:00:22,649 --> 00:00:25,739
ほとんどのスポーツで利き手を
使っていることに気づきます

12
00:00:25,739 --> 00:00:31,254
つまり 利き手には筋肉がつくのに
もう一方の腕はそのままです

13
00:00:31,254 --> 00:00:33,265
これは残念ですね

14
00:00:33,265 --> 00:00:34,793
では どうしたらいいでしょう？

15
00:00:34,793 --> 00:00:36,839
次の週は 少し工夫しましょう

16
00:00:36,840 --> 00:00:39,630
月曜日は右手を後ろに縛り

17
00:00:39,630 --> 00:00:44,054
左手でテニスをして

18
00:00:44,054 --> 00:00:46,770
火曜日は左手を後ろに縛って

19
00:00:46,770 --> 00:00:50,500
右手で重量挙げをしてみましょう

20
00:00:50,500 --> 00:00:52,243
水曜日には

21
00:00:52,243 --> 00:00:56,250
右手を縛って 左手でアメフトです

22
00:00:56,250 --> 00:01:00,850
木曜日は 楽して両手で野球をします

23
00:01:00,850 --> 00:01:05,500
金曜日には両手を後ろに縛って
バスケットボールをしてみましょう

24
00:01:05,500 --> 00:01:06,875
これではうまくいきません

25
00:01:06,875 --> 00:01:09,409
しかし これがトレーニングです

26
00:01:09,409 --> 00:01:10,995
次の土曜日にはまた

27
00:01:10,995 --> 00:01:15,635
左手を後ろに縛って
右手で卓球をします

28
00:01:15,635 --> 00:01:21,314
１週間後には 両方の上腕二頭筋が
発達しているのがわかります

29
00:01:21,313 --> 00:01:25,029
これは ニューラルネットワークを
訓練する際によく起こることです

30
00:01:25,030 --> 00:01:26,858
ネットワークのある部分の

31
00:01:26,858 --> 00:01:30,578
重みが非常に大きく
すべてを支配してしまうのに

32
00:01:30,578 --> 00:01:33,369
別の部分はあまり使わないので

33
00:01:33,370 --> 00:01:36,504
トレーニングされないことがあります

34
00:01:36,504 --> 00:01:39,359
この問題を解決するには
この部分をオフにして

35
00:01:39,358 --> 00:01:43,084
ネットワークの残りの部分を
トレーニングさせます

36
00:01:43,084 --> 00:01:46,343
具体的には
エポックを通過するごとに

37
00:01:46,343 --> 00:01:49,673
ランダムにいくつかの
ノードをオフにして

38
00:01:49,674 --> 00:01:52,129
ここを通ってはいけないと
指定するのです

39
00:01:52,129 --> 00:01:54,609
他のノードが その分を補い

40
00:01:54,608 --> 00:01:57,905
多くのトレーニングに
参加しなければなりません

41
00:01:57,905 --> 00:02:03,549
たとえば 最初のエポックでは
このノードを使用できないので

42
00:02:03,549 --> 00:02:08,664
フィードフォワードと
バックプロパゲーションを実行します

43
00:02:08,663 --> 00:02:10,655
２回目のエポックでは

44
00:02:10,655 --> 00:02:13,503
この２つのノードは使えません

45
00:02:13,503 --> 00:02:16,204
ここでもフィードフォワードと
バックプロパゲーションを実行します

46
00:02:16,205 --> 00:02:20,965
３回目のエポックでも
このノードは使えません

47
00:02:20,965 --> 00:02:25,289
また フィードフォワードと
バックプロパゲーションを実行します

48
00:02:25,288 --> 00:02:27,309
最後のエポックでも

49
00:02:27,310 --> 00:02:29,818
２つのノードは使えないので

50
00:02:29,818 --> 00:02:31,598
これを続けます

51
00:02:31,598 --> 00:02:36,158
ノードを省くには アルゴリズムに
パラメータを与えます

52
00:02:36,158 --> 00:02:42,218
このパラメータは 特定のエポックで
各ノードがドロップされる確率です

53
00:02:42,218 --> 00:02:46,358
たとえば 0.2とすると
各エポックごとに

54
00:02:46,359 --> 00:02:51,264
20％の確率で各ノードが
オフになるということです

55
00:02:51,264 --> 00:02:53,770
他のノードよりオフになる
回数が多いノードと

56
00:02:53,770 --> 00:02:56,810
オフにならないノードが
あることに気付きます

57
00:02:56,810 --> 00:03:00,068
何度も繰り返すので
問題ありません

58
00:03:00,068 --> 00:03:03,209
平均すると 各ノードは同じ扱いを
受けることになります

59
00:03:03,210 --> 00:03:05,560
この方法はドロップアウトと呼ばれ

60
00:03:05,560 --> 00:03:08,259
ニューラルネットワークの学習には
よく使われる便利なものです

