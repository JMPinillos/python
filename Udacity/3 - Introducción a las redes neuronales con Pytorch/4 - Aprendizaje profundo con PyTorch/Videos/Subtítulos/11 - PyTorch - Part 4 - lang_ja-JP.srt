1
00:00:00,000 --> 00:00:03,419
おかえりなさい

2
00:00:03,419 --> 00:00:08,724
このノートでは

3
00:00:08,724 --> 00:00:10,919
衣類の画像を分類する
ニューラルネットワークを構築します

4
00:00:10,919 --> 00:00:14,099
最後の動画で説明したように

5
00:00:14,099 --> 00:00:18,914
最近は MNISTはかなり平凡な
データセットとなっています

6
00:00:18,914 --> 00:00:21,625
ニューラルネットワークで非常に
高い精度が簡単に得られます

7
00:00:21,625 --> 00:00:24,179
ですから 代わりにここでは
Fashion-MNISTを使用します

8
00:00:24,179 --> 00:00:26,820
Fashion-MNISTは MNISTの
ドロップイン互換品で

9
00:00:26,820 --> 00:00:28,199
28×28のグレースケール画像です

10
00:00:28,199 --> 00:00:31,903
ここでは衣類ですね

11
00:00:31,903 --> 00:00:33,494
ですから クラスのバリエーションが
かなり幅広いので

12
00:00:33,494 --> 00:00:37,019
分類するのが はるかに難しくなります

13
00:00:37,020 --> 00:00:38,280
ここには手書きの数字ではなく

14
00:00:38,280 --> 00:00:41,219
Tシャツ ズボン セーター 靴もあります

15
00:00:41,219 --> 00:00:45,644
現実の世界で使用するデータセットを
良く代表していると言えます

16
00:00:45,645 --> 00:00:50,330
では ネットワークの構築とトレーニングを
それぞれやってみてください

17
00:00:50,329 --> 00:00:53,039
ここでネットワークアーキテクチャを
定義した後

18
00:00:53,039 --> 00:00:56,359
ここでネットワーク作成して

19
00:00:56,359 --> 00:00:59,884
条件とオプティマイザを定義して
トレーニングパス用のコードを記述します

20
00:00:59,884 --> 00:01:03,729
ネットワークの構築と トレーニングができたら

21
00:01:03,729 --> 00:01:05,310
ネットワークをテストすることができます

22
00:01:05,310 --> 00:01:08,030
ここでは フォワードパスを実行して
ロジットを取得し

23
00:01:08,030 --> 00:01:11,530
クラスの確率を計算し 場合によっては
ネットワークを出力し

24
00:01:11,530 --> 00:01:15,049
テストセットから画像の１つを渡し

25
00:01:15,049 --> 00:01:19,519
作成したネットワークが 画像を正しく
予測できるかを確認します

26
00:01:19,519 --> 00:01:22,189
私の解を見たい場合は 次のノートのパート５か

27
00:01:22,189 --> 00:01:25,200
次の動画で確認してください

