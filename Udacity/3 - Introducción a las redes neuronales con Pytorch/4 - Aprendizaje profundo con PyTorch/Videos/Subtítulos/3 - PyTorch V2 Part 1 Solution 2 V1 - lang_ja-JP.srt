1
00:00:00,000 --> 00:00:03,375
演習問題の解を説明します

2
00:00:03,375 --> 00:00:08,699
行列積を使って ネットワークの出力を
計算してもらいましたが

3
00:00:08,699 --> 00:00:12,059
積と和の２つの演算を別々に行うよりも

4
00:00:12,060 --> 00:00:16,605
行列積を使った方が効率的だからです

5
00:00:16,605 --> 00:00:18,300
しかし 行列積を求めるには

6
00:00:18,300 --> 00:00:21,405
重みテンソルのサイズを変更する
必要があります

7
00:00:21,405 --> 00:00:24,690
weights.view(5, 1)を実行すると

8
00:00:24,690 --> 00:00:31,304
重みテンソルの形が
５行１列に変わります

9
00:00:31,304 --> 00:00:34,969
ここでの特徴は １行５列の形を
しているので

10
00:00:34,969 --> 00:00:37,144
この行列積を実行できます

11
00:00:37,145 --> 00:00:42,984
積と和を行う演算が
１つあるだけで

12
00:00:42,984 --> 00:00:45,104
あとはバイアス項を追加し

13
00:00:45,104 --> 00:00:46,299
活性化により

14
00:00:46,299 --> 00:00:49,129
出力を得ることができます

15
00:00:49,130 --> 00:00:51,560
これらの単純なニューラル
ネットワークを

16
00:00:51,560 --> 00:00:55,310
積み重ねると 多層ニューラル
ネットワークに進化します

17
00:00:55,310 --> 00:00:57,679
これにより

18
00:00:57,679 --> 00:01:02,255
データのパターンや相関関係を
把握する能力が向上します

19
00:01:02,255 --> 00:01:06,409
ここでは 重みの単純なベクトル
ではなく

20
00:01:06,409 --> 00:01:08,269
行列を使用する必要があります

21
00:01:08,269 --> 00:01:13,744
このケースでは 入力ベクトルと
入力データx₁ x₂ x₃です

22
00:01:13,745 --> 00:01:16,790
ここでの特徴である
xだけのベクトルと考えましょう

23
00:01:16,790 --> 00:01:23,695
中間層には隠れユニットに
入力をつなぐ重みがあり

24
00:01:23,694 --> 00:01:25,864
隠れ層と呼ばれますが

25
00:01:25,864 --> 00:01:29,134
この隠れ層には
２つのユニットがあります

26
00:01:29,135 --> 00:01:32,370
つまり 特徴量や入力を

27
00:01:32,370 --> 00:01:34,370
行ベクトルにして

28
00:01:34,370 --> 00:01:37,040
それに１列目を掛け合わせると

29
00:01:37,040 --> 00:01:39,275
出力が得られ

30
00:01:39,275 --> 00:01:41,484
h₁という値が得られます

31
00:01:41,484 --> 00:01:44,840
特徴量を２列目に
掛け合わせると

32
00:01:44,840 --> 00:01:48,625
h₂の値を得られます

33
00:01:48,625 --> 00:01:53,239
つまり 行列とベクトルと
線型代数を使って

34
00:01:53,239 --> 00:01:56,929
数学的に
この隠れ層の値を得るには

35
00:01:56,930 --> 00:02:00,855
特徴ベクトルx₁からxₙと

36
00:02:00,855 --> 00:02:02,505
重み行列の間で

37
00:02:02,504 --> 00:02:04,604
行列の掛け算を行います

38
00:02:04,605 --> 00:02:06,780
先ほどと同様

39
00:02:06,780 --> 00:02:08,150
これらの値を

40
00:02:08,150 --> 00:02:11,689
活性化関数に渡しますが

41
00:02:11,689 --> 00:02:14,954
単にネットワークの行出力が
欲しい場合もあります

42
00:02:14,955 --> 00:02:18,560
ここでは
ランダムなデータ 特徴量

43
00:02:18,560 --> 00:02:22,430
ランダムな重み行列と
バイアス項を生成し

44
00:02:22,430 --> 00:02:26,500
多層ネットワークの
出力を計算しています

45
00:02:26,500 --> 00:02:30,819
基本的には ３つの入力特徴

46
00:02:30,819 --> 00:02:32,989
２つの隠れユニット

47
00:02:32,990 --> 00:02:35,000
１つの出力ユニットを
用意しました

48
00:02:35,000 --> 00:02:41,025
そこで ３つの特徴量と
この特徴量ベクトルを作成します

49
00:02:41,025 --> 00:02:44,085
入力は=３で 形状はこのようになり

50
00:02:44,085 --> 00:02:48,195
２つの隠れユニットと
１つの出力ユニットができます

51
00:02:48,194 --> 00:02:53,259
これらの値を使って
重み行列ができるのです

52
00:02:53,259 --> 00:02:58,234
この多層ネットワークの計算は
皆さんにお任せします

53
00:02:58,235 --> 00:03:01,895
その場合も
ネットワークの出力と隠れ層に

54
00:03:01,895 --> 00:03:06,670
先ほど定義した活性化関数を
使ってください

